"use strict";exports.id=775,exports.ids=[775],exports.modules={3775:(e,t,s)=>{s.d(t,{h:()=>r});let r={molecules:{query:{getMolecule:"molecules:query:getMolecule",getMoleculesByIds:"molecules:query:getMoleculesByIds",getRecentMolecules:"molecules:query:getRecentMolecules",searchMolecules:"molecules:query:searchMolecules"},mutations:{addMolecule:"molecules:mutations:addMolecule",deleteMolecule:"molecules:mutations:deleteMolecule",updateMolecule:"molecules:mutations:updateMolecule"}},mixtures:{mixtures:{getMixture:"mixtures:mixtures:getMixture",getMixturesByIds:"mixtures:mixtures:getMixturesByIds",getRecentMixtures:"mixtures:mixtures:getRecentMixtures",searchMixtures:"mixtures:mixtures:searchMixtures"},mutations:{addMixture:"mixtures:mutations:addMixture",deleteMixture:"mixtures:mutations:deleteMixture",updateMixture:"mixtures:mutations:updateMixture"}},experiments:{experiments:{getExperiment:"experiments:experiments:getExperiment",getExperimentsByIds:"experiments:experiments:getExperimentsByIds",getRecentExperiments:"experiments:experiments:getRecentExperiments",searchExperiments:"experiments:experiments:searchExperiments"},protocols:{getProtocol:"experiments:protocols:getProtocol",getProtocolsByIds:"experiments:protocols:getProtocolsByIds",getRecentProtocols:"experiments:protocols:getRecentProtocols",searchProtocols:"experiments:protocols:searchProtocols"}}}}};