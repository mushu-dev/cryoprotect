"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[569],{569:function(e,r,t){t.d(r,{aM:function(){return client_useQuery}});for(var n=t(7294),i=[],o=[],s=(Uint8Array,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),u=0,a=s.length;u<a;++u)i[u]=s[u],o[s.charCodeAt(u)]=u;function fromByteArray(e){for(var r,t=e.length,n=t%3,o=[],s=0,u=t-n;s<u;s+=16383)o.push(function(e,r,t){for(var n,o=[],s=r;s<t;s+=3)o.push(i[(n=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]))>>18&63]+i[n>>12&63]+i[n>>6&63]+i[63&n]);return o.join("")}(e,s,s+16383>u?u:s+16383));return 1===n?o.push(i[(r=e[t-1])>>2]+i[r<<4&63]+"=="):2===n&&o.push(i[(r=(e[t-2]<<8)+e[t-1])>>10]+i[r>>4&63]+i[r<<2&63]+"="),o.join("")}function isSimpleObject(e){let r="object"==typeof e,t=Object.getPrototypeOf(e),n=null===t||t===Object.prototype||t?.constructor?.name==="Object";return r&&n}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63;let l=BigInt("-9223372036854775808"),c=BigInt("9223372036854775807"),f=BigInt("0"),h=BigInt("8"),d=(BigInt("256"),DataView.prototype.setBigInt64?function(e){if(e<l||c<e)throw Error(`BigInt ${e} does not fit into a 64-bit signed integer.`);let r=new ArrayBuffer(8);return new DataView(r).setBigInt64(0,e,!0),fromByteArray(new Uint8Array(r))}:function(e){e<f&&(e-=l+l);let r=e.toString(16);r.length%2==1&&(r="0"+r);let t=new Uint8Array(new ArrayBuffer(8)),n=0;for(let i of r.match(/.{2}/g).reverse())t.set([parseInt(i,16)],n++),e>>=h;return fromByteArray(t)});function validateObjectField(e){if(e.length>1024)throw Error(`Field name ${e} exceeds maximum field name length 1024.`);if(e.startsWith("$"))throw Error(`Field name ${e} starts with a '$', which is reserved.`);for(let r=0;r<e.length;r+=1){let t=e.charCodeAt(r);if(t<32||t>=127)throw Error(`Field name ${e} has invalid character '${e[r]}': Field names can only contain non-control ASCII characters`)}}function stringifyValueForError(e){return JSON.stringify(e,(e,r)=>void 0===r?"undefined":"bigint"==typeof r?`${r.toString()}n`:r)}function errorMessageForUnsupportedType(e,r,t,n){return e?`${r}${stringifyValueForError(t)} is not a supported Convex type (present at path ${e} in original object ${stringifyValueForError(n)}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`:`${r}${stringifyValueForError(t)} is not a supported Convex type.`}function value_convexToJson(e){return function convexToJsonInternal(e,r,t,n){if(void 0===e){let e=t&&` (present at path ${t} in original object ${stringifyValueForError(r)})`;throw Error(`undefined is not a valid Convex value${e}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`)}if(null===e)return e;if("bigint"==typeof e){if(e<l||c<e)throw Error(`BigInt ${e} does not fit into a 64-bit signed integer.`);return{$integer:d(e)}}if("number"==typeof e){if(!(Number.isNaN(e)||!Number.isFinite(e)||Object.is(e,-0)))return e;{let r=new ArrayBuffer(8);return new DataView(r).setFloat64(0,e,!0),{$float:fromByteArray(new Uint8Array(r))}}}if("boolean"==typeof e||"string"==typeof e)return e;if(e instanceof ArrayBuffer)return{$bytes:fromByteArray(new Uint8Array(e))};if(Array.isArray(e))return e.map((e,n)=>convexToJsonInternal(e,r,t+`[${n}]`,!1));if(e instanceof Set)throw Error(errorMessageForUnsupportedType(t,"Set",[...e],r));if(e instanceof Map)throw Error(errorMessageForUnsupportedType(t,"Map",[...e],r));if(!isSimpleObject(e)){let n=e?.constructor?.name,i=n?`${n} `:"";throw Error(errorMessageForUnsupportedType(t,i,e,r))}let i={},o=Object.entries(e);for(let[e,s]of(o.sort(([e,r],[t,n])=>e===t?0:e<t?-1:1),o))void 0!==s?(validateObjectField(e),i[e]=convexToJsonInternal(s,r,t+`.${e}`,!1)):n&&(validateObjectField(e),i[e]=function(e,r,t){if(void 0===e)return{$undefined:null};if(void 0===r)throw Error(`Programming error. Current value is ${stringifyValueForError(e)} but original value is undefined`);return convexToJsonInternal(e,r,t,!1)}(s,r,t+`.${e}`));return i}(e,e,"",!1)}DataView.prototype.getBigInt64,Symbol.for("ConvexError");let arr=()=>Array.from({length:4},()=>0);arr(),arr();let g=Symbol.for("functionName"),p=Symbol.for("toReferencePath");function api_getFunctionName(e){let r=function(e){let r;if("string"==typeof e)r=e.startsWith("function://")?{functionHandle:e}:{name:e};else if(e[g])r={name:e[g]};else{let t=e[p]??null;if(!t)throw Error(`${e} is not a functionReference`);r={reference:t}}return r}(e);if(void 0===r.name){if(void 0!==r.functionHandle)throw Error(`Expected function reference like "api.file.func" or "internal.file.func", but received function handle ${r.functionHandle}`);if(void 0!==r.reference)throw Error(`Expected function reference in the current component like "api.file.func" or "internal.file.func", but received reference ${r.reference}`);throw Error(`Expected function reference like "api.file.func" or "internal.file.func", but received ${JSON.stringify(r)}`)}if("string"==typeof e)return e;let t=e[g];if(!t)throw Error(`${e} is not a functionReference`);return t}!function createApi(e=[]){return new Proxy({},{get(r,t){if("string"==typeof t){let r=[...e,t];return createApi(r)}if(t===g){if(e.length<2){let r=["api",...e].join(".");throw Error(`API path is expected to be of the form \`api.moduleName.functionName\`. Found: \`${r}\``)}let r=e.slice(0,-1).join("/"),t=e[e.length-1];return"default"===t?r:r+":"+t}return t===Symbol.toStringTag?"FunctionReference":void 0}})}();var y=Object.defineProperty,long_defNormalProp=(e,r,t)=>r in e?y(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,long_publicField=(e,r,t)=>long_defNormalProp(e,"symbol"!=typeof r?r+"":r,t);let long_Long=class long_Long{constructor(e,r){long_publicField(this,"low"),long_publicField(this,"high"),long_publicField(this,"__isUnsignedLong__"),this.low=0|e,this.high=0|r,this.__isUnsignedLong__=!0}static isLong(e){return!0===(e&&e.__isUnsignedLong__)}static fromBytesLE(e){return new long_Long(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24)}toBytesLE(){let e=this.high,r=this.low;return[255&r,r>>>8&255,r>>>16&255,r>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]}static fromNumber(e){return isNaN(e)||e<0?b:e>=m?w:new long_Long(e%v|0,e/v|0)}toString(){return(BigInt(this.high)*BigInt(v)+BigInt(this.low)).toString()}equals(e){return long_Long.isLong(e)||(e=long_Long.fromValue(e)),(this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low}notEquals(e){return!this.equals(e)}comp(e){return(long_Long.isLong(e)||(e=long_Long.fromValue(e)),this.equals(e))?0:e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1}lessThanOrEqual(e){return 0>=this.comp(e)}static fromValue(e){return"number"==typeof e?long_Long.fromNumber(e):new long_Long(e.low,e.high)}};let b=new long_Long(0,0),v=4294967296,m=v*v,w=new long_Long(-1,-1);if((class extends Error{}).prototype.name="InvalidTokenError",void 0===n)throw Error("Required dependency 'react' not found");let _=n.createContext(void 0);function client_useQuery(e,...r){let t="skip"===r[0],i="skip"===r[0]?{}:function(e){if(void 0===e)return{};if(!isSimpleObject(e))throw Error(`The arguments to a Convex function must be an object. Received: ${e}`);return e}(r[0]),o="string"==typeof e?{[g]:e}:e,s=api_getFunctionName(o),u=(0,n.useMemo)(()=>t?{}:{query:{query:o,args:i}},[JSON.stringify(value_convexToJson(i)),s,t]),a=function(e){let r=(0,n.useContext)(_);if(void 0===r)throw Error("Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app");let t=(0,n.useMemo)(()=>(e,t,n)=>r.watchQuery(e,t,{journal:n}),[r]);return function(e,r){let[t]=(0,n.useState)(()=>new QueriesObserver(r));t.createWatch!==r&&t.setCreateWatch(r),(0,n.useEffect)(()=>()=>t.destroy(),[t]);let i=(0,n.useMemo)(()=>({getCurrentValue:()=>t.getLocalResults(e),subscribe:r=>(t.setQueries(e),t.subscribe(r))}),[t,e]);return function({getCurrentValue:e,subscribe:r}){let[t,i]=(0,n.useState)(()=>({getCurrentValue:e,subscribe:r,value:e()})),o=t.value;return(t.getCurrentValue!==e||t.subscribe!==r)&&i({getCurrentValue:e,subscribe:r,value:o=e()}),(0,n.useEffect)(()=>{let t=!1,checkForUpdates=()=>{t||i(t=>{if(t.getCurrentValue!==e||t.subscribe!==r)return t;let n=e();return t.value===n?t:{...t,value:n}})},n=r(checkForUpdates);return checkForUpdates(),()=>{t=!0,n()}},[e,r]),o}(i)}(e,t)}(u),l=a.query;if(l instanceof Error)throw l;return l}var E=Object.defineProperty,queries_observer_defNormalProp=(e,r,t)=>r in e?E(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,queries_observer_publicField=(e,r,t)=>queries_observer_defNormalProp(e,"symbol"!=typeof r?r+"":r,t);let QueriesObserver=class QueriesObserver{constructor(e){queries_observer_publicField(this,"createWatch"),queries_observer_publicField(this,"queries"),queries_observer_publicField(this,"listeners"),this.createWatch=e,this.queries={},this.listeners=new Set}setQueries(e){for(let r of Object.keys(e)){let{query:t,args:n}=e[r];if(api_getFunctionName(t),void 0===this.queries[r])this.addQuery(r,t,n);else{let e=this.queries[r];(api_getFunctionName(t)!==api_getFunctionName(e.query)||JSON.stringify(value_convexToJson(n))!==JSON.stringify(value_convexToJson(e.args)))&&(this.removeQuery(r),this.addQuery(r,t,n))}}for(let r of Object.keys(this.queries))void 0===e[r]&&this.removeQuery(r)}subscribe(e){return this.listeners.add(e),()=>{this.listeners.delete(e)}}getLocalResults(e){let r={};for(let t of Object.keys(e)){let n;let{query:i,args:o}=e[t];api_getFunctionName(i);let s=this.createWatch(i,o);try{n=s.localQueryResult()}catch(e){if(e instanceof Error)n=e;else throw e}r[t]=n}return r}setCreateWatch(e){for(let r of(this.createWatch=e,Object.keys(this.queries))){let{query:e,args:t,watch:n}=this.queries[r],i=n.journal();this.removeQuery(r),this.addQuery(r,e,t,i)}}destroy(){for(let e of Object.keys(this.queries))this.removeQuery(e);this.listeners=new Set}addQuery(e,r,t,n){if(void 0!==this.queries[e])throw Error(`Tried to add a new query with identifier ${e} when it already exists.`);let i=this.createWatch(r,t,n),o=i.onUpdate(()=>this.notifyListeners());this.queries[e]={query:r,args:t,watch:i,unsubscribe:o}}removeQuery(e){let r=this.queries[e];if(void 0===r)throw Error(`No query found with identifier ${e}.`);r.unsubscribe(),delete this.queries[e]}notifyListeners(){for(let e of this.listeners)e()}};(0,n.createContext)(void 0)}}]);