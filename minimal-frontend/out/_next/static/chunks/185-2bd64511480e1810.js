"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[185],{9185:function(t,e,o){o.d(e,{AT:function(){return getMoleculeDepiction},GK:function(){return getMixtures},cZ:function(){return getMolecule},getMolecules:function(){return getMolecules},rY:function(){return getMixture}});let n={molecules:[{id:1,name:"Glycerol",formula:"C3H8O3",pubchem_cid:"753",smiles:"C(C(CO)O)O",molecular_weight:92.09,is_cryoprotectant:!0,description:"A common cryoprotectant used in various applications."},{id:2,name:"Dimethyl Sulfoxide (DMSO)",formula:"C2H6OS",pubchem_cid:"679",smiles:"CS(=O)C",molecular_weight:78.13,is_cryoprotectant:!0,description:"A widely used penetrating cryoprotectant."},{id:3,name:"Ethylene Glycol",formula:"C2H6O2",pubchem_cid:"174",smiles:"OCCO",molecular_weight:62.07,is_cryoprotectant:!0,description:"Used in cryopreservation of embryos and tissues."},{id:4,name:"Propylene Glycol",formula:"C3H8O2",pubchem_cid:"1030",smiles:"CC(O)CO",molecular_weight:76.09,is_cryoprotectant:!0,description:"Used as a cryoprotectant for various biological materials."}],mixtures:[{id:1,name:"VS55",description:"A cryoprotectant mixture used for organ preservation.",components:[{molecule:{id:1,name:"Glycerol",formula:"C3H8O3"},concentration:15,concentration_unit:"%",role:"Primary cryoprotectant"},{molecule:{id:2,name:"Dimethyl Sulfoxide (DMSO)",formula:"C2H6OS"},concentration:20,concentration_unit:"%",role:"Penetrating cryoprotectant"},{molecule:{id:3,name:"Ethylene Glycol",formula:"C2H6O2"},concentration:20,concentration_unit:"%",role:"Penetrating cryoprotectant"}]},{id:2,name:"Standard Cell Freezing Medium",description:"Common mixture for cell line preservation.",components:[{molecule:{id:2,name:"Dimethyl Sulfoxide (DMSO)",formula:"C2H6OS"},concentration:10,concentration_unit:"%",role:"Primary cryoprotectant"}]}],molecular_depictions:{"C(C(CO)O)O":'<svg version="1.1" id="mol-glycerol" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="300px" height="200px" viewBox="0 0 300 200" enable-background="new 0 0 300 200">\n      <rect fill="#FFFFFF" width="300" height="200"/>\n      <g transform="translate(10,10) scale(2.8)">\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 50,34.6 L 60,40 L 70,34.6"/>\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 60,40 L 60,50"/>\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 60,50 L 70,55.4"/>\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 60,50 L 50,55.4"/>\n        <text x="49" y="32" font-family="sans-serif" font-size="10" fill="#FF0000">OH</text>\n        <text x="69" y="32" font-family="sans-serif" font-size="10" fill="#FF0000">OH</text>\n        <text x="69" y="62" font-family="sans-serif" font-size="10" fill="#FF0000">OH</text>\n      </g>\n    </svg>',"CS(=O)C":'<svg version="1.1" id="mol-dmso" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="300px" height="200px" viewBox="0 0 300 200" enable-background="new 0 0 300 200">\n      <rect fill="#FFFFFF" width="300" height="200"/>\n      <g transform="translate(10,10) scale(2.8)">\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 50,50 L 60,50"/>\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 60,50 L 70,50"/>\n        <path fill="none" stroke="#000000" stroke-width="1.5" d="M 60,50 L 60,40"/>\n        <text x="56" y="54" font-family="sans-serif" font-size="10" fill="#AA5500">S</text>\n        <text x="59" y="36" font-family="sans-serif" font-size="10" fill="#FF0000">O</text>\n      </g>\n    </svg>'},molecular_properties:{"C(C(CO)O)O":{molecular_weight:92.09,logp:-1.76,num_atoms:14,num_rings:0,formula:"C3H8O3"},"CS(=O)C":{molecular_weight:78.13,logp:-.62,num_atoms:10,num_rings:0,formula:"C2H6OS"},OCCO:{molecular_weight:62.07,logp:-1.2,num_atoms:10,num_rings:0,formula:"C2H6O2"},"CC(O)CO":{molecular_weight:76.09,logp:-.92,num_atoms:13,num_rings:0,formula:"C3H8O2"}}},r={HEROKU_API:{failureCount:0,lastFailureTime:null,state:"CLOSED",lastSuccessTime:Date.now()},RDKIT_API:{failureCount:0,lastFailureTime:null,state:"CLOSED",lastSuccessTime:Date.now()}};function isCircuitOpen(t){let e=r[t];if(!e)return!1;if("OPEN"===e.state){let o=Date.now();return!(o-e.lastFailureTime>3e4)||(e.state="HALF_OPEN",console.info("Circuit breaker for ".concat(t," moving to HALF_OPEN state")),!1)}return!1}function recordSuccess(t){let e=r[t];e&&(e.lastSuccessTime=Date.now(),"HALF_OPEN"===e.state?(e.failureCount=0,e.state="CLOSED",console.info("Circuit breaker for ".concat(t," reset to CLOSED state"))):"CLOSED"===e.state&&(e.failureCount=0))}function recordFailure(t){let e=r[t];e&&(e.failureCount++,e.lastFailureTime=Date.now(),"CLOSED"===e.state&&e.failureCount>=5?(e.state="OPEN",console.warn("Circuit breaker for ".concat(t," tripped to OPEN state after ").concat(5," failures"))):"HALF_OPEN"===e.state&&(e.state="OPEN",console.warn("Circuit breaker for ".concat(t," returned to OPEN state after failed test request"))))}async function fetchWithErrorHandling(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r="HEROKU_API",i="".concat("https://cryoprotect-8030e4025428.herokuapp.com/api").concat(t),c=Math.random().toString(36).substring(2,10);if(isCircuitOpen(r))return console.warn("[".concat(c,"] Circuit open for ").concat(r,", falling back to mock data")),getMockData(t,o);let a="undefined"!=typeof AbortController?new AbortController:null,l=e.timeout||1e4,s=a?setTimeout(()=>a.abort(),l):null;try{console.info("[".concat(c,"] Fetching from ").concat(i," (attempt ").concat(n+1,"/").concat(4,")"));let t=await fetch(i,{...e,headers:{"Content-Type":"application/json",Accept:"application/json","X-Request-ID":c,...e.headers},mode:"cors",credentials:"omit",signal:e.signal||(null==a?void 0:a.signal)});if(s&&clearTimeout(s),!t.ok)throw Error("API error: ".concat(t.status," ").concat(t.statusText));let o=await t.json();return recordSuccess(r),o}catch(u){s&&clearTimeout(s);let i="AbortError"===u.name,a=i?"Request timed out after ".concat(l,"ms"):u.message;if(console.error("[".concat(c,"] API request failed (attempt ").concat(n+1,"/").concat(4,"): ").concat(a)),recordFailure(r),n<3){let r=1e3*Math.pow(2,n);return console.info("[".concat(c,"] Retrying in ").concat(r,"ms...")),new Promise(i=>{setTimeout(()=>{i(fetchWithErrorHandling(t,e,o,n+1))},r)})}return console.warn("[".concat(c,"] All retries failed, falling back to mock data")),getMockData(t,o)}}function getMockData(t,e){if(e&&n[e]){if(console.info("Using mock data for ".concat(t," with key ").concat(e)),t.includes("/")){let o=t.split("/"),r=o[o.length-1],i=n[e];if(i&&Array.isArray(i)){let t=i.find(t=>String(t.id)===String(r));if(t)return t}}return n[e]}if(t.includes("molecules"))return Array.isArray(n.molecules)?n.molecules[0]:null;if(t.includes("mixtures"))return Array.isArray(n.mixtures)?n.mixtures[0]:null;throw Error("No mock data available for ".concat(t))}async function fetchRDKitAPI(t,e){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r="RDKIT_API",i="".concat("https://cryoprotect-rdkit.fly.dev").concat(t),c=Math.random().toString(36).substring(2,10);if(isCircuitOpen(r))throw console.warn("[".concat(c,"] Circuit open for ").concat(r)),Error("RDKit service unavailable (circuit open)");let a="undefined"!=typeof AbortController?new AbortController:null,l=o.timeout||1e4,s=a?setTimeout(()=>a.abort(),l):null;try{console.info("[".concat(c,"] Fetching from ").concat(i," (attempt ").concat(n+1,"/").concat(4,")"));let t=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Request-ID":c,...o.headers},body:JSON.stringify(e),mode:"cors",credentials:"omit",signal:null==a?void 0:a.signal});if(s&&clearTimeout(s),!t.ok)throw Error("RDKit API error: ".concat(t.status," ").concat(t.statusText));let l=await t.json();return recordSuccess(r),l}catch(u){s&&clearTimeout(s);let i="AbortError"===u.name,a=i?"Request timed out after ".concat(l,"ms"):u.message;if(console.error("[".concat(c,"] RDKit API request failed (attempt ").concat(n+1,"/").concat(4,"): ").concat(a)),recordFailure(r),n<3){let r=1e3*Math.pow(2,n);return console.info("[".concat(c,"] Retrying RDKit API in ").concat(r,"ms...")),new Promise(i=>{setTimeout(()=>{i(fetchRDKitAPI(t,e,o,n+1))},r)})}throw u}}async function getMolecules(){return fetchWithErrorHandling("/molecules",{},"molecules")}async function getMolecule(t){return fetchWithErrorHandling("/molecules/".concat(t),{},"molecules")}async function getMixtures(){return fetchWithErrorHandling("/mixtures",{},"mixtures")}async function getMixture(t){return fetchWithErrorHandling("/mixtures/".concat(t),{},"mixtures")}async function getMoleculeDepiction(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t)return"";let o={smiles:t,width:e.width||300,height:e.height||200,includeMoleculeDetails:e.includeMoleculeDetails||!1};try{let t=await fetchRDKitAPI("/depict",o);return t.svg||""}catch(e){if(console.error("RDKit depiction generation failed:",e),n.molecular_depictions[t])return console.info("Using cached depiction for ".concat(t)),n.molecular_depictions[t];return""}}}}]);