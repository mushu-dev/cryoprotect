name: Fly.io Deployment

on:
  push:
    branches:
      - master  # Deploy production on master branch push
    paths:
      - 'rdkit-service-files/**'  # Only deploy when RDKit service code changes
      - '.github/workflows/fly-deploy.yml'
  pull_request:
    types: [opened, synchronize, reopened]  # Deploy preview for PRs
    paths:
      - 'rdkit-service-files/**'  # Only deploy when RDKit service code changes
      - '.github/workflows/fly-deploy.yml'

jobs:
  test:
    name: Test RDKit Service
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flask requests
          
      - name: Run tests
        run: |
          cd rdkit-service-files
          python -m pytest tests/ -v || true  # Don't fail workflow yet for tests
  
  deploy:
    name: Deploy to Fly.io
    needs: test
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' && github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy to Fly.io
        run: |
          cd rdkit-service-files
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          
      - name: Verify deployment
        run: |
          # Wait for deployment to stabilize
          sleep 30
          
          # Get the app URL from fly.toml file
          APP_NAME=$(grep -o 'app = "[^"]*"' rdkit-service-files/fly.toml | cut -d'"' -f2)
          APP_URL="https://${APP_NAME}.fly.dev"
          
          # Check health endpoint
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${APP_URL}/health")
          
          if [[ "${HTTP_STATUS}" -ge 200 ]] && [[ "${HTTP_STATUS}" -lt 400 ]]; then
            echo "Deployment verified successfully with status code: ${HTTP_STATUS}"
            echo "APP_URL=${APP_URL}" >> $GITHUB_ENV
          else
            echo "Deployment verification failed with status code: ${HTTP_STATUS}"
            exit 1
          fi
          
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `## RDKit Service Deployment Status: ‚úÖ Success
            
            ### üîç Deploy Information
            - **Environment:** Production
            - **Commit:** [${context.sha.substring(0, 7)}](https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${context.sha})
            - **Deploy URL:** [${process.env.APP_URL}](${process.env.APP_URL})
            
            RDKit microservice has been successfully deployed to Fly.io.
            `;
            
            // Add comment to PR
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });