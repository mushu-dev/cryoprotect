version: '3.8'

services:
  # Minimal development configuration with volume mount
  cryoprotect-dev:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FLASK_ENV=development
    image: cryoprotect-dev:latest
    dns:
      - 1.1.1.1
      - 8.8.8.8
    ports:
      - "5000:5000"
    volumes:
      # For development, mount the project directory as a volume
      - .:/app:Z
      - dev-cache:/app/cache:Z
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      # Load sensitive values from .env file for development
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-please-change-in-production}
      # Development-specific settings
      - LOG_LEVEL=DEBUG
      - LOG_TO_FILE=1
      - LOG_TO_CONSOLE=1
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - FLASK_DEBUG=1
    restart: unless-stopped
    entrypoint: ["/app/docker-entrypoint.sh"]
    command: ["/opt/conda/envs/cryoprotect/bin/python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    # SELinux labels for volumes
    security_opt:
      - label=type:container_file_t
    networks:
      - app-network

networks:
  app-network:
    external: true
    name: cryoprotect-net

volumes:
  dev-cache:
    driver: local