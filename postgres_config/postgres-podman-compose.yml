version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: cryoprotect-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      # Performance optimization flags for container
      PGSSLMODE: prefer
      PGCLIENTENCODING: UTF8
      WORK_MEM: 16MB
      MAINTENANCE_WORK_MEM: 512MB
      PGDATESTYLE: "iso, ymd"
      PGTZ: "UTC"
    command: 
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
    ports:
      - "5432:5432"
    volumes:
      - /home/mushu/Projects/CryoProtect/postgres_data:/var/lib/postgresql/data:Z
      - /home/mushu/Projects/CryoProtect/postgres_config/postgresql.optimized.conf:/etc/postgresql/postgresql.conf:Z
      - /home/mushu/Projects/CryoProtect/postgres_config/pg_hba.optimized.conf:/etc/postgresql/pg_hba.conf:Z
    # Map container user to postgres UID and GID
    user: "postgres:postgres"
    security_opt:
      - label=type:container_file_t
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres-network
    # Apply resource limitations based on system memory
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2GB
        reservations:
          cpus: '0.5'
          memory: 512M

networks:
  postgres-network:
    driver: bridge
